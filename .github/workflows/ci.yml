#
# https://docs.github.com/en/actions
# https://github.com/actions
#

name: CI

on:
  pull_request: {}
  push: {}

jobs:

  test:
    runs-on: ${{matrix.test.os}}
    strategy:
      matrix:
        test:
          - {pgver: "9.3", os: "ubuntu-16.04"}
          - {pgver: "9.4", os: "ubuntu-16.04"}
          - {pgver: "9.5", os: "ubuntu-18.04"}
          - {pgver: "9.6", os: "ubuntu-18.04"}
          - {pgver: "10", os: "ubuntu-20.04"}
          - {pgver: "11", os: "ubuntu-20.04"}
          - {pgver: "12", os: "ubuntu-20.04"}
          - {pgver: "13", os: "ubuntu-20.04"}
          - {pgver: "11", os: "macos-10.15"}
          - {pgver: "12", os: "macos-10.15"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "InstallDB / Linux"
        if: ${{runner.os == 'Linux'}}
        run: |
          echo "::group::apt-get-update"
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main ${{matrix.test.pgver}}" \
          | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo -nH apt-get -q update
          echo "::endgroup::"

          echo "::group::apt-get-install"

          # disable new cluster creation
          sudo -nH mkdir -p /etc/postgresql-common/createcluster.d
          echo "create_main_cluster = false" | sudo -nH tee /etc/postgresql-common/createcluster.d/no-main.conf

          sudo -nH apt-get -qyu install \
            postgresql-${{matrix.test.pgver}} \
            postgresql-server-dev-${{matrix.test.pgver}} \
            libpq-dev patchutils
          echo "::endgroup::"

          # tune environment
          echo "::add-path::/usr/lib/postgresql/${{matrix.test.pgver}}/bin"
          echo "::set-env name=PGHOST::/tmp"
          echo "::set-env name=SED::sed"

          dpkg -l postgres\* libpq\* bison\* flex\* gcc\* clang\* libllvm\*

      - name: "InstallDB / Mac"
        if: ${{runner.os == 'macOS'}}
        run: |
          echo "::group::install"
          brew install patchutils bison flex gnu-sed postgresql@${{matrix.test.pgver}}
          echo "::endgroup::"
          echo "::add-path::/usr/local/opt/flex/bin"
          echo "::add-path::/usr/local/opt/bison/bin"
          echo "::add-path::/usr/local/opt/postgresql@${{matrix.test.pgver}}/bin"
          echo "::set-env name=SED::gsed"

      - name: "Build"
        run: make BISON=bison FLEX=flex

      - name: "Install"
        run: sudo -nH bash -c "PATH='${PATH}' make install"

      - name: "StartDB"
        run: |
          mkdir -p log
          LANG=C LC_ALL=C initdb --no-locale data
          ${SED} -r -i -e "s,^[# ]*(unix_socket_directories).*,\\1='/tmp'," data/postgresql.conf
          pg_ctl -D data -l log/pg.log start || { cat log/pg.log ; exit 1; }

      - name: "Test"
        run: make citest

      - name: "StopDB"
        run: |
          pg_ctl -D data stop
          rm -rf data log /tmp/.s.PGSQL*

  mingw64:
    runs-on: ${{matrix.test.os}}
    strategy:
      matrix:
        test:
          - {os: "windows-2016"}
          - {os: "windows-2019"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup MSYS"
        shell: cmd
        run: |
          echo ::add-path::C:\msys64\usr\bin
          echo ::add-path::C:\msys64\mingw64\bin

      - name: "InstallDB / mingw64"
        shell: bash
        run: |
          pacman -S --noconfirm --needed mingw-w64-x86_64-postgresql
          pacman -S --noconfirm --needed patchutils
          echo "::set-env name=PGHOST::127.0.0.1"

      - name: "Build"
        shell: bash
        run: make BISON=bison FLEX=flex

      - name: "Install"
        shell: bash
        run: make install

      - name: "StartDB"
        shell: bash
        run: |
          mkdir log
          initdb.exe --no-locale -U postgres -D data
          pg_ctl -D data -l log/pg.log start || { cat log/pg.log ; exit 1; }

      - name: "Test"
        shell: bash
        run: make citest

      - name: "StopDB"
        shell: bash
        run: |
          pg_ctl -D data stop

